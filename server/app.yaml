runtime: custom
threadsafe: true
api_version: 1
service: default
env: flex
beta_settings:
  enable_app_engine_apis: true

resources:
  memory_gb: 3.0
  cpu: 1.0

manual_scaling:
  instances: 2

#readiness_check:
#  path: '/health_check'
#  check_interval_sec: 5
#  timeout_sec: 4
#  failure_threshold: 2
#  success_threshold: 2
#  app_start_timeout_sec: 600
#
#liveness_check:
#  path: '/health_check'
#  check_interval_sec: 30
#  timeout_sec: 4
#  failure_threshold: 2
#  success_threshold: 2

default_expiration: 10d
handlers:
# Unused graphql:
- url: /graphql.*
  script: graphql_server.app
- url: /graphiql.*
  script: graphql_server.app
- url: /static/graphql.*
  script: graphql_server.app
# Builtin
- url: /_ah/queue/deferred
  script: admin_apps.authorized_deferred_app
# Mapreduce/Pipeline:
- url: /_pipeline(/.*)?
  script: admin_apps.authorized_pipeline_app
- url: /mapreduce/worker_callback.*
  script: admin_apps.authorized_main_app
- url: /mapreduce(/.*)?
  script: admin_apps.authorized_mapreduce_app
# My Admin Tools
- url: /tools/.*
  script: admin_apps.authorized_main_app
- url: /admin.*
  script: admin_apps.authorized_admin_app
- url: /events/admin.*
  script: admin_apps.authorized_main_app
- url: /sources/admin.*
  script: admin_apps.authorized_main_app
- url: /tasks/.*
  script: admin_apps.authorized_main_app
- url: .*
  script: main.application

skip_files:
# This is here so that the GAE dev_appserver's mtime_watcher will ignore this directory
# and therefore not complain about 'too many files'. It's different from the other lines,
# which are intended to keep files from getting pushed to the GAE server.
- .*node_modules
# We don't want any webpack file generation (into dist/ dir) triggering a reload of the appserver,
# since the appserver doesn't need/care about these files
- .*dist
- .*assets
